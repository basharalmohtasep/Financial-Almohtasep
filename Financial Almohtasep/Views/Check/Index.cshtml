@model CheckDto
@{
    ViewData["Title"] = "Checks";
}
<div class="container mt-4">
    <h2 class="mb-4">Check List</h2>
    <div class="d-flex justify-content-between mb-4">
        <a asp-controller="Check" asp-action="Add" class="btn btn-success">Add Check</a>
        <a asp-controller="Payee" asp-action="Add" class="btn btn-success">Add Payee</a>
        <a asp-controller="Payee" asp-action="Index" class="btn btn-primary">View Payee</a>
    </div>
    <form asp-action="Index" method="get" class="mb-4">
        <div class="row">
            <div class="col-md-4">
                <label for="PayeeId" class="form-label">Select Payee</label>
                <select id="PayeeSelect" name="PayeeId" class="form-select">
                    <option value="">Select Payee</option>
                    @foreach (var payee in Model.BaseIdNameModel)
                    {
                        if (ViewBag.PayeeId is not null && payee.Id.Equals(ViewBag.EmployeeId))
                        {
                            <option value="@payee.Id" selected>@payee.Name</option>
                        }
                        else
                        {
                            <option value="@payee.Id">@payee.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-4">
                <label for="startDate" class="form-label">Date Range</label>
                <div class="d-flex">
                    <input id="startDate" name="StartDate" type="date" class="form-control me-2" value="@(ViewBag.StartDate?.ToString("yyyy-MM-dd") ?? string.Empty)">
                    <span class="align-self-center">to</span>
                    <input id="endDate" name="EndDate" type="date" class="form-control ms-2" value="@(ViewBag.EndDate?.ToString("yyyy-MM-dd") ?? string.Empty)">
                </div>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button type="submit" class="btn btn-primary">Apply Filters</button>
            </div>
        </div>
    </form>
    <table class="table table-striped table-bordered" id="employeeTable">
        <thead class="table-dark">
            <tr>
                <th>DueDate</th>
                <th>Check Number</th>
                <th>Amount</th>
                <th>Payee Name</th>
                <th>Bank</th>
                <th>Currency</th>
                <th>Note</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if(Model is not null)
            {
            @foreach (var Check in Model.Checks)
            {
                var Payee = Model.BaseIdNameModel.FirstOrDefault(e => e.Id == Check.PayeeID);
                <tr>
                    <td>@Check.DueDate.ToString("yyyy-MM-dd")</td>
                    <td>@Check.CheckNumber</td>
                    <td>@Check.Amount</td>
                    <td>@Payee.Name</td>
                    <td>@Check.Bank</td>
                    <td>@Check.Currency</td>
                    <td>@Check.Note</td>
                    <td>
                        <a href="@Url.Action("Edit", "Check", new { id = Check.Id })" class="btn btn-warning btn-sm">Edit</a>
                            <a href="@Url.Action("View", "Check", new { id = Check.Id })" class="btn btn-primary btn-sm">View</a>
                        <form asp-action="Delete" asp-controller="Check" asp-route-id="@Check.Id" method="post" style="display:inline-block;">
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="1"><strong>Total Amont</strong></td>
                <td colspan="5">
                    <strong>@Model.Checks.Sum(t => t.Amount)</strong>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
