@model ChequeDetailViewModel;
@using Financial_Almohtasep.Models.Enum;
@using Financial_Almohtasep.Data;
<div class="container mt-5">
    <h2 class="mb-4"> Add Cheque </h2>
    <form asp-action="Add" method="post" class="needs-validation">
        <div class="mb-3">
            <label for="ChequeNumber" class="form-label">Cheque Number</label>
            <input asp-for="ChequeNumber" type="text" class="form-control" placeholder="Enter The Cheque Number" />
            <span asp-validation-for="ChequeNumber" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label for="Payees" class="form-label">For Who</label>
            <input type="text" class="form-control" list="payeesList" placeholder="Select Payees" />
            <datalist id="payeesList">
                @foreach (var payees in ViewBag.data as List<Payees>)
                {
                    <option value="@payees.FullName"></option>
                }
            </datalist>
            <button type="submit" class="btn btn-primary">Submit</button>
            <span asp-validation-for="Payees" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label for="Amount" class="form-label">Amount</label>
            <input asp-for="Amount" class="form-control" placeholder="Enter The Cheque Amount" />
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label for="BankName" class="form-label">Bank Name</label>
        <select asp-for="BankName" class="form-control">
            <option value="">Select Type</option>
            @foreach (BankName type in Enum.GetValues(typeof(BankName)))
            {
                if (type != BankName.None)
                {
                    if (Model != null && Model.BankName == type)
                    {
                        <option value="@((int)type)" selected>@type.ToString()</option>
                    }
                    else
                    {
                        <option value="@((int)type)">@type.ToString()</option>
                    }
                }
            }
        </select>
        </div>
        <span asp-validation-for="BankName" class="text-danger"></span>

        <div class="mb-3">
            <label for="Currency" class="form-label">Bank Name</label>
            <select asp-for="Currency" class="form-control">
            <option value="">Select bank Name</option>
                @foreach (Currency type in Enum.GetValues(typeof(Currency)))
            {
                        if (type != Currency.None)
                            if (Model != null && Model.Currency == type)
                    {
                        <option value="@((int)type)" selected>@type.ToString()</option>
                    }
                    else
                    {
                        <option value="@((int)type)">@type.ToString()</option>
                    }
            }
            }
        </select>
        
            <span asp-validation-for="Currency" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label for="DueDate" class="form-label">Hire Date</label>
            <input asp-for="DueDate" type="date" class="form-control" />
            <span asp-validation-for="DueDate" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>

<script>
document.getElementById('addPayeesButton').addEventListener('click', function () {
    window.location.href = '@Url.Action("AddPayee", "Cheque")';
});
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}